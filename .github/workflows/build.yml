name: Build and Release lasco (multi-platform)

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Haskell
      uses: haskell/actions/setup@v2
      with:
        ghc-version: '9.4.8'
        cabal-version: '3.10.1.0'

    - name: Install alex and happy
      run: |
        cabal update
        cabal install alex happy
        echo "$HOME/.cabal/bin" >> $GITHUB_PATH

    - name: Build project
      run: |
        cabal update
        cabal build
      working-directory: code

    - name: Prepare binary
      run: |
        mkdir -p output
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          exe=$(find dist-newstyle -type f -name lasco.exe | head -n 1)
          cp "$exe" output/lasco-windows.exe
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          bin=$(find dist-newstyle -type f -name lasco | head -n 1)
          cp "$bin" output/lasco-macos
          chmod +x output/lasco-macos
        else
          bin=$(find dist-newstyle -type f -name lasco | head -n 1)
          cp "$bin" output/lasco-linux
          chmod +x output/lasco-linux
        fi
      shell: bash
      working-directory: code

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: lasco-${{ matrix.os }}
        path: code/output/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Publish release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/lasco-ubuntu-latest/lasco-linux
          artifacts/lasco-macos-latest/lasco-macos
          artifacts/lasco-windows-latest/lasco-windows.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
